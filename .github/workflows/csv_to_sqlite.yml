name: Merge scanning.xlsx + prices.xlsx → SQLite with ZIP

on:
  push:
    paths:
      - 'conversation/csv/scanning.xlsx'
      - 'conversation/csv/prices.xlsx'

jobs:
  merge_and_convert_excel:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Check both files changed together
        run: |
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          scanning_changed=$(echo "$changed_files" | grep "conversation/csv/scanning.xlsx" || true)
          prices_changed=$(echo "$changed_files" | grep "conversation/csv/prices.xlsx" || true)

          if [ -n "$scanning_changed" ] && [ -n "$prices_changed" ]; then
            echo "✅ Both files updated. Proceeding..."
          else
            echo "❌ Both scanning.xlsx and prices.xlsx must be updated together!"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Required Python Packages
        run: pip install pandas openpyxl sqlite-utils

      - name: Merge XLSX Files and Create SQLite
        run: |
          python3 <<EOF
          import pandas as pd
          import sqlite3
          import zipfile
          import os

          scan_file = "conversation/csv/scanning.xlsx"
          price_file = "conversation/csv/prices.xlsx"

          scan_df = pd.read_excel(scan_file)
          price_df = pd.read_excel(price_file)

          merged_df = pd.merge(scan_df, price_df, on="Barcode", how="left")

          db_name = "merged.db"
          conn = sqlite3.connect(db_name)
          merged_df.to_sql("sc", conn, if_exists="replace", index=False)

          conn.execute("CREATE TABLE IF NOT EXISTS databaseversion (DBversion TEXT)")
          conn.execute("INSERT INTO databaseversion (DBversion) VALUES ('merged')")
          conn.commit()
          conn.execute("VACUUM;")
          conn.close()

          os.makedirs("conversation/Ready", exist_ok=True)

          with zipfile.ZipFile("conversation/Ready/merged.zip", 'w', zipfile.ZIP_DEFLATED) as zipf:
              zipf.write(db_name)

          os.remove(db_name)
          EOF

      - name: Commit Merged ZIP DB
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add conversation/Ready/merged.zip
          git commit -m "Added merged SQLite ZIP from scanning.xlsx + prices.xlsx"
          git push

name: CSV to SQLite Converter with ZIP Compression

on:
  push:
    paths:
      - 'conversation/csv/*.csv'

jobs:
  convert_and_zip_sqlite:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Tools
        run: pip install pandas sqlite-utils

      - name: Find Latest CSV File
        id: findfile
        run: |
          latest_file=$(ls -t conversation/csv/*.csv | head -1)
          echo "file=$latest_file" >> $GITHUB_OUTPUT

      - name: Convert CSV to SQLite + Add Version Table
        run: |
          csv_file="${{ steps.findfile.outputs.file }}"
          db_name=$(basename "$csv_file" .csv).db

          # Step 1: Create lightweight DB setup
          sqlite3 "$db_name" 'PRAGMA journal_mode=OFF; PRAGMA synchronous=OFF;'

          # Step 2: Insert main CSV as 'sc'
          sqlite-utils insert "$db_name" sc "$csv_file" --csv --detect-types

          # Step 3: Add databaseversion table
          version_name=$(basename "$csv_file")
          echo "DBversion" > version.csv
          echo "$version_name" >> version.csv
          sqlite-utils insert "$db_name" databaseversion version.csv --csv

          # Step 4: Vacuum and Shrink
          sqlite3 "$db_name" 'VACUUM;'

      - name: Compress SQLite DB as ZIP
        run: |
          db_name=$(basename "${{ steps.findfile.outputs.file }}" .csv).db
          zip_name=$(basename "$db_name" .db).zip

          mkdir -p conversation/Ready
          zip -j "conversation/Ready/$zip_name" "$db_name"

          # Remove uncompressed DB
          rm "$db_name"

      - name: Commit Zipped SQLite DB
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add conversation/Ready/*.zip
          git commit -m "Added compressed SQLite ZIP DB"
          git push
